load("~/Learning/Intro2DS/HW/HW8/LatLon.rda")
install.packages("XML")
install.packages("RCurl")
library(XML)
library(RCurl)
url = "https://en.m.wikipedia.org/wiki/List_of_countries_by_population_(United_Nations)"
### Your code here
help("readHTMLTable")
html_text = readHTMLTable(url, header = c("Rank", "Country or area", "UN continental region", "UN statistical region", "Population (1 July 2016)", "Population (1 July 2017)", "Change"))
### Your code here
html_text = xmlParse(url)
html_text = htmlParse(url)
html_text = readHTMLTable(html_text, header = c("Rank", "Country or area", "UN continental region", "UN statistical region", "Population (1 July 2016)", "Population (1 July 2017)", "Change"))
### Your code here
help("readHTMLTable")
html_text = readHTMLTable(html_text)
html_text = readHTMLTable(html_text, as.data.frame = TRUE)
html_text = readLines(url)
html_text = readHTMLTable(html_text, as.data.frame = TRUE)
html_text = readHTMLTable(html_text, header = c("Rank", "Country or area", "UN continental region", "UN statistical region", "Population (1 July 2016)", "Population (1 July 2017)", "Change"), as.data.frame = TRUE)
Tables = readHTMLTable(html_text, header = c("Rank", "Country or area", "UN continental region", "UN statistical region", "Population (1 July 2016)", "Population (1 July 2017)", "Change"), as.data.frame = TRUE)
url = "https://en.m.wikipedia.org/wiki/List_of_countries_by_population_(United_Nations)"
html_text = readLines(url)
Tables = readHTMLTable(html_text, header = c("Rank", "Country or area", "UN continental region", "UN statistical region", "Population (1 July 2016)", "Population (1 July 2017)", "Change"), as.data.frame = TRUE)
View(Tables)
Tables
class(Tables)
Table[[1]]
Tables[[1]]
class(Tables[[1]])
class(Tables[[2]])
Tables[[2]]
Tables = readHTMLTable(html_text, header != NA, as.data.frame = TRUE)
Tables = readHTMLTable(html_text, header = TRUE, as.data.frame = TRUE)
class(Tables)
Tables[[2]]
population = Tables[[2]]
class(population)
population
### Your code here
population = population[,c(2, 5, 6)]
population
length(population)
save.image("~/Learning/Intro2DS/HW/HW8/HW8.RData")
names(population)
load("~/Learning/Intro2DS/HW/HW8/HW8.RData")
names(population)
names(population)[1]
names(population)[1] = "Country"
names(population)[2] = "Population_2016"
names(population)[3] = "Population_2017"
names(population)
### Your code here
population
population$Country = gsub("[a-z]", "", population$Country)
population
population = Tables[[2]]
population
### Your code here
population = population[,c(2, 5, 6)]
population
names(population)[1] = "Country"
names(population)[2] = "Population_2016"
names(population)[3] = "Population_2017"
names(population)
### Your code here
population
population$Country = gsub("[.*]$", "", population$Country)
population
population$Country = gsub("[.*]", "", population$Country)
population
population$Country = gsub("//[.*]", "", population$Country)
population
population$Country = gsub("\\[.*]", "", population$Country)
population
population[1:5,]
### Your code here
LatLon
population$Country = toupper(population$Country)
population[1:5,]
### Your code here
LatLon
AllData = merge(LatLon, population, by.x = "Country", by.y = "Country")
AllData
save.image("~/Learning/Intro2DS/HW/HW8/HW8.RData")
load("~/Learning/Intro2DS/HW/HW8/LatLon.rda")
### Your code here
AllData$Population_2016 = as.numeric(AllData$Population_2016)
AllData$Population_2017 = as.numeric(AllData$Population_2017)
AllData
load("~/Learning/Intro2DS/HW/HW8/HW8.RData")
AllData
### Your code here
class(AllData$Population_2016)
typeof(AllData$Population_2016)
AllData$Population_2016 = as.numeric(paste(AllData$Population_2016))
AllData
load("~/Learning/Intro2DS/HW/HW8/HW8.RData")
AllData
### Your code here
class(AllData$Population_2016)
typeof(AllData$Population_2016)
AllData$Population_2016 = as.numeric(AllData$Population_2016)
AllData$Population_2016
AllData
load("~/Learning/Intro2DS/HW/HW8/HW8.RData")
AllData
as.numeric(AllData$Population_2016)
AllData$Population_2016 = as.numeric(as.character(AllData$Population_2016))
AllData
load("~/Learning/Intro2DS/HW/HW8/HW8.RData")
AllData
View(AllData)
### Your code here
class(AllData$Population_2016)
AllData$Population_2016 = as.numeric(as.character(AllData$Population_2016))
AllData$Population_2016 <- gsub(",", "", AllData$Population_2016)
AllData
load("~/Learning/Intro2DS/HW/HW8/HW8.RData")
AllData$Population_2016 <- gsub(",", "", AllData$Population_2016)
AllData
### Your code here
class(AllData$Population_2016)
AllData$Population_2016 = as.numeric(AllData$Population_2016)
AllData
AllData$Population_2017 = gsub(",", "", AllData$Population_2017)
AllData$Population_2017 = as.numeric(AllData$Population_2017)
AllData
class(AllData$Population_2016)
AllData$Growth = (AllData$Population_2017 - AllData$Population_2016)/AllData$Population_2016 * 100
AllData
AllData[-5:-1,]
tail(AllData)
tail(AllData, 5)
### Your code here
makeBaseDocument = function(){
doc1 = newXMLDoc()
root = newXMLNode("kml", doc = doc1)
ensureNamespace(root, c(r = "http://www.opengis.net/kml/2.2"))
Node_D <- newXMLNode("Document", parent = root)
return(doc)
}
makeBaseDocument()
### Your code here
doc1 = newXMLDoc()
### Your code here
doc1 = newXMLDoc()
library(XML)
library(RCurl)
### Your code here
doc1 = newXMLDoc()
kml = newXMLNode("kml", doc = doc1)
load("~/Learning/Intro2DS/HW/HW8/HW8.RData")
AllData
### Your code here
AllData$Population_2016 = gsub(",", "", AllData$Population_2016)
AllData$Population_2017 = gsub(",", "", AllData$Population_2017)
AllData$Population_2016 = as.numeric(AllData$Population_2016)
AllData$Population_2017 = as.numeric(AllData$Population_2017)
AllData$Growth = (AllData$Population_2017 - AllData$Population_2016)/AllData$Population_2016 * 100
tail(AllData, 5)
remove(kml)
AllData
save.image("~/Learning/Intro2DS/HW/HW8/HW8.RData")
child1 = newXMLNode("Document", parent = root)
### Your code here
doc1 = newXMLDoc()
root = newXMLNode("kml", doc = doc1)
child1 = newXMLNode("Document", parent = root)
addPlacemark = function(lat,lon,country,code,pop16,pop17,growth,parent){
pm = newXMLNode("Placemark",attrs=c(id=code),parent=parent)
newXMLNode("name",country,parent=pm)
newXMLNode("description",paste(country,"\n population_2016: ",pop16,"\n population_2017: ",pop17,"\n growth: ",growth,sep =""),parent=pm)
newXMLNode("Point",newXMLNode("coordinates",paste(c(lon,lat,0),collapse=",")),parent=pm)
}
### Your code here
length(AllData)
### Your code here
nrow(AllData)
AllData$Country[100]
AllData$Population_2016[100]
class(AllData)
class(AllData$Country)
### Your code here
for (i in nrow(AllData)){
addPlacemark(lat = AllData$Latitude[i], lon = AllData$Longitude[i], country = AllData$Country[i], code = AllData$Code[i], pop16 = AllData$Population_2016[i], pop17 = AllData$Population_2017[i], growth = AllData$Growth[i], parent = child1)
}
doc1
remove(doc1)
### Your code here
doc1 = newXMLDoc()
root = newXMLNode("kml", doc = doc1)
child1 = newXMLNode("Document", parent = root)
### Your answer here
addPlacemark = function(lat,lon,country,code,pop16,pop17,growth,parent){ # Define the function with needed input arguments
pm = newXMLNode("Placemark",attrs=c(id=code),parent = parent) # Create the placemark node as the child node of "Document"
newXMLNode("name",country, parent = pm) # Create "placemakr"'s child node "name" containing the country names
newXMLNode("description",paste(country,"\n population_2016: ",pop16,"\n population_2017: ",pop17,"\n growth: ",growth,sep =""),parent = pm)
newXMLNode("Point",newXMLNode("coordinates",paste(c(lon,lat,0),collapse=",")),parent = pm)
}
### Your code here
for (i in 1:nrow(AllData)){
addPlacemark(lat = AllData$Latitude[i], lon = AllData$Longitude[i], country = AllData$Country[i], code = AllData$Code[i], pop16 = AllData$Population_2016[i], pop17 = AllData$Population_2017[i], growth = AllData$Growth[i], parent = child1)
}
doc1
class(doc1)
AllData
LatLon
doc1
saveXML(doc1, file = "Part2.kml")
doc1
save.image("~/Learning/Intro2DS/HW/HW8/HW8.RData")
load("~/Learning/Intro2DS/HW/HW8/HW8.RData")
### Q11. The following code is an example of how to create cut points for different categories of population in 2016.
pop16Cut = as.numeric(cut(AllData$Population_2016, breaks=5))
pop16Cut
### Q11. The following code is an example of how to create cut points for different categories of population in 2016.
pop16Cut = as.numeric(cut(AllData$Population_2016, breaks=5))
pop16Cut
quantile(AllData$Population_2017)
quantile(AllData$Population_2017, 5)
help("quantile")
quantile(AllData$Population_2017, probs = seq(0, 1, 0.2))
pop17Cut = as.numeric(cut(AllData$Population_2017, breaks = c(0, 284091.8, 3862275, 9844211.4, 31796090.2, 1409517297)))
pop17Cut
AllData$Population_2017[41]
pop17Cut = as.numeric(cut(AllData$Population_2017, breaks = c(0, 284091.8, 3862275, 9844211.4, 31796090.2, 1409517297.1)))
pop17Cut
pop17Cut = as.numeric(cut(AllData$Population_2017, breaks = c(0, 284091.8, 3862275, 9844211.4, 31796090.2, 1409517298)))
pop17Cut
AllData$Population_2017[41]
pop17Cut = as.numeric(cut(AllData$Population_2017, breaks = c(0, 284091.8, 3862275, 9844211.4, 31796090.2, 1409517397)))
pop17Cut
length(pop17Cut)
quantile(AllData$Growth, probs = seq(0, 1, 0.2))
growCut = as.numeric(cut(AllData$Growth, breaks = c(-1.9574225, 0.2341591, 0.8342999, 1.3174967, 2.2173115, 4.7799181)))
growCut
growCut[142]
AllData$Growth[142]
growCut = as.numeric(cut(AllData$Growth, breaks = c(-1.9574225, 0.2341591, 0.8342999, 1.3174967, 2.2173115, 4.779918)))
growCut[142]
growCut = as.numeric(cut(AllData$Growth, breaks = c(-1.9574225, 0.2341591, 0.8342999, 1.3174967, 2.2173115, 4.7799182)))
growCut[142]
growCut
addPlacemark = function(lat,lon,country,code,pop16,pop17,growth,parent,pop17cut,growcut,style=TRUE){
pm = newXMLNode("Placemark",newXMLNode("name",country),attrs=c(id=code),parent=parent)
newXMLNode("description",paste(country,"\n population_2016: ",pop16,"\n population_2017: ",pop17,"\n growth: ",growth,sep =""),parent=pm)
newXMLNode("Point",newXMLNode("coordinates",paste(c(lon,lat,0),collapse=",")),parent=pm)
if(style){newXMLNode("styleUrl",paste("#YOR",growcut,"-",pop17cut,sep=''),parent=pm)}
}
addStyle = function(parent,scales,colors){
for(j in 1:5){
for(k in 1:5){
st = newXMLNode("Style",attrs=c("id"=paste("YOR",j,"-",k,sep="")),parent=parent)
newXMLNode("IconStyle",newXMLNode("Icon",paste("color_label/label_",colors[j],".png",sep="")),newXMLNode("scale",scales[k]),parent=st)
}
}
}
### Your code here
scale_lable = c(1, 2, 4 ,6, 10)
color_lable = c("blue", "green", "yellow", "orange", "red")
### Your code here
doc2 = newXMLDoc()
library(XML)
library(RCurl)
### Your code here
doc2 = newXMLDoc()
root2 = newXMLNode("kml", doc = doc2)
child2 = newXMLNode("Document", parent = root2)
addStyle(parent = child2, scales = scale_lable, colors = color_lable)
addPlacemark = function(lat,lon,country,code,pop16,pop17,growth,parent,pop17cut,growcut,style=TRUE){
pm = newXMLNode("Placemark",newXMLNode("name",country),attrs=c(id=code),parent=parent)
newXMLNode("description",paste(country,"\n population_2016: ",pop16,"\n population_2017: ",pop17,"\n growth: ",growth,sep =""),parent=pm)
newXMLNode("Point",newXMLNode("coordinates",paste(c(lon,lat,0),collapse=",")),parent=pm)
if(style){newXMLNode("styleUrl",paste("#YOR",growcut,"-",pop17cut,sep=''),parent=pm)}
}
for (i in 1:nrow(AllData)){
addPlacemark(lat = AllData$Latitude, lon = AllData$Longitude, country = AllData$Country, code = AllData$Code, pop16 = AllData$Population_2016, pop17 = AllData$Population_2017, growth = AllData$Growth, parent = child2, pop17cut = pop17Cut, growcut = growCut)
}
### Your code here
saveXML(doc2, file = "Part3.kml")
doc2
### Your code here
doc2 = newXMLDoc()
root2 = newXMLNode("kml", doc = doc2)
child2 = newXMLNode("Document", parent = root2)
for (i in 1:nrow(AllData)){
addPlacemark(lat = AllData$Latitude, lon = AllData$Longitude, country = AllData$Country, code = AllData$Code, pop16 = AllData$Population_2016, pop17 = AllData$Population_2017, growth = AllData$Growth, parent = child2, pop17cut = pop17Cut, growcut = growCut)
}
doc2
### Your code here
doc2 = newXMLDoc()
root2 = newXMLNode("kml", doc = doc2)
child2 = newXMLNode("Document", parent = root2)
for (i in 1:nrow(AllData)){
addPlacemark(lat = AllData$Latitude, lon = AllData$Longitude, country = AllData$Country, code = AllData$Code, pop16 = AllData$Population_2016, pop17 = AllData$Population_2017, growth = AllData$Growth, parent = child2)
}
### Your answer here
addPlacemark = function(lat,lon,country,code,pop16,pop17,growth,parent){ # Define the function with needed input arguments
pm = newXMLNode("Placemark",attrs=c(id=code),parent = parent) # Create the placemark node as the child node of "Document"
newXMLNode("name",country, parent = pm) # Create "placemakr"'s child node "name" containing the country names
newXMLNode("description",paste(country,"\n population_2016: ",pop16,"\n population_2017: ",pop17,"\n growth: ",growth,sep =""),parent = pm)
newXMLNode("Point",newXMLNode("coordinates",paste(c(lon,lat,0),collapse=",")),parent = pm)
}
for (i in 1:nrow(AllData)){
addPlacemark(lat = AllData$Latitude, lon = AllData$Longitude, country = AllData$Country, code = AllData$Code, pop16 = AllData$Population_2016, pop17 = AllData$Population_2017, growth = AllData$Growth, parent = child2)
}
doc2
### Your code here
doc2 = newXMLDoc()
root2 = newXMLNode("kml", doc = doc2)
child2 = newXMLNode("Document", parent = root2)
addPlacemark(lat = AllData$Latitude[i], lon = AllData$Longitude[i], country = AllData$Country[i], code = AllData$Code[i], pop16 = AllData$Population_2016[i], pop17 = AllData$Population_2017[i], growth = AllData$Growth[i], parent = child2)
for (i in 1:nrow(AllData)){
addPlacemark(lat = AllData$Latitude[i], lon = AllData$Longitude[i], country = AllData$Country[i], code = AllData$Code[i], pop16 = AllData$Population_2016[i], pop17 = AllData$Population_2017[i], growth = AllData$Growth[i], parent = child2)
}
doc2
addPlacemark = function(lat,lon,country,code,pop16,pop17,growth,parent,pop17cut,growcut,style=TRUE){
pm = newXMLNode("Placemark",newXMLNode("name",country),attrs=c(id=code),parent=parent)
newXMLNode("description",paste(country,"\n population_2016: ",pop16,"\n population_2017: ",pop17,"\n growth: ",growth,sep =""),parent=pm)
newXMLNode("Point",newXMLNode("coordinates",paste(c(lon,lat,0),collapse=",")),parent=pm)
if(style){newXMLNode("styleUrl",paste("#YOR",growcut,"-",pop17cut,sep=''),parent=pm)}
}
### Your code here
doc2 = newXMLDoc()
root2 = newXMLNode("kml", doc = doc2)
child2 = newXMLNode("Document", parent = root2)
addStyle(parent = child2, scales = scale_lable, colors = color_lable)
for (i in 1:nrow(AllData)){
addPlacemark(lat = AllData$Latitude[i], lon = AllData$Longitude[i], country = AllData$Country[i], code = AllData$Code[i], pop16 = AllData$Population_2016[i], pop17 = AllData$Population_2017[i], growth = AllData$Growth[i], parent = child2, pop17cut = pop17Cut[i], growcut = growCut[i])
}
doc2
### Your code here
saveXML(doc2, file = "Part3.kml")
### Your code here
saveXML(doc2, file = "Part3.kml")
### Your code here
scale_lable = c(1, 2, 3 ,4, 5)
### Your code here
doc2 = newXMLDoc()
root2 = newXMLNode("kml", doc = doc2)
child2 = newXMLNode("Document", parent = root2)
addStyle(parent = child2, scales = scale_lable, colors = color_lable)
for (i in 1:nrow(AllData)){
addPlacemark(lat = AllData$Latitude[i], lon = AllData$Longitude[i], country = AllData$Country[i], code = AllData$Code[i], pop16 = AllData$Population_2016[i], pop17 = AllData$Population_2017[i], growth = AllData$Growth[i], parent = child2, pop17cut = pop17Cut[i], growcut = growCut[i])
}
doc2
save.image("~/Learning/Intro2DS/HW/HW8/HW8.RData")
load("~/Learning/Intro2DS/HW/HW8/HW8.RData")
addStyle = function(parent,scales,colors){
for(j in 1:5){
for(k in 1:5){
st = newXMLNode("Style",attrs=c("id"=paste("YOR",j,"-",k,sep="")),parent=parent)
newXMLNode("IconStyle",newXMLNode("Icon",paste("/Users/tomgong/R_Projects/color_label/label_",colors[j],".png",sep="")),newXMLNode("scale",scales[k]),parent=st)
}
}
}
addPlacemark = function(lat,lon,country,code,pop16,pop17,growth,parent,pop17cut,growcut,style=TRUE){
pm = newXMLNode("Placemark",newXMLNode("name",country),attrs=c(id=code),parent=parent)
newXMLNode("description",paste(country,"\n population_2016: ",pop16,"\n population_2017: ",pop17,"\n growth: ",growth,sep =""),parent=pm)
newXMLNode("Point",newXMLNode("coordinates",paste(c(lon,lat,0),collapse=",")),parent=pm)
if(style){newXMLNode("styleUrl",paste("#YOR",growcut,"-",pop17cut,sep=''),parent=pm)}
}
### Your code here
doc2 = newXMLDoc()
library(XML)
library(RCurl)
### Your code here
doc2 = newXMLDoc()
doc2
root2 = newXMLNode("kml", doc = doc2)
child2 = newXMLNode("Document", parent = root2)
addStyle(parent = child2, scales = scale_lable, colors = color_lable)
for (i in 1:nrow(AllData)){
addPlacemark(lat = AllData$Latitude[i], lon = AllData$Longitude[i], country = AllData$Country[i], code = AllData$Code[i], pop16 = AllData$Population_2016[i], pop17 = AllData$Population_2017[i], growth = AllData$Growth[i], parent = child2, pop17cut = pop17Cut[i], growcut = growCut[i])
}
### Your code here
saveXML(doc2, file = "Part3.kml")
### Your code here
doc2 = newXMLDoc()
root2 = newXMLNode("kml", doc = doc2)
child2 = newXMLNode("Document", parent = root2)
addStyle(parent = child2, scales = scale_lable, colors = color_lable)
for (i in 1:nrow(AllData)){
addPlacemark(lat = AllData$Latitude[i], lon = AllData$Longitude[i], country = AllData$Country[i], code = AllData$Code[i], pop16 = AllData$Population_2016[i], pop17 = AllData$Population_2017[i], growth = AllData$Growth[i], parent = child2, pop17cut = pop17Cut[i], growcut = growCut[i], style = TRUE)
}
### Your code here
saveXML(doc2, file = "Part3.kml")
### Your code here
saveXML(doc2, file = "Part3.kml")
save.image("~/Learning/Intro2DS/HW/HW8/HW8.RData")
